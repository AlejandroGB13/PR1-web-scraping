# Por lo tanto eliminaremos las observaciones que tengan la casilla director vacía.
filmDS <- filmDS[-which(filmDS$Director ==""),]
filmDS %>% distinct(Title, Actor, .keep_all= TRUE)
# Al eliminar los duplicados vemos que no ha cambiado el numero de observaciones, por lo tanto no había duplicados.
# Para este conjunto de datos no parece necesario aplicar normalización en ninguna variable.
# Antes de pasar a la discretización, eliminaremos la variable X.image, ya que no interesa para nada.
filmDS <- filmDS %>% select(-X.Image)
# La modificación que si podríamos aplicar es la discretización, en concreto en las variables popularity, length y year.
# Esto puede ser útil para reducir el coste computacional, el tiempo de ejecución y el almacenamiento.
summary(filmDS)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Con estos gráficos podemos interpretar mejor los datos de los que disponemos.
# Vemos que los niveles de popularidad de las películas dadas es bastante uniforme.
# La duración de la mayoría de películas oscila entre los 90 y 120 minutos, pero también hay bastantes que tienen un poco mas o un poco menos duración que este rango.
# Finalmente vemos un gran incremento de películas a medida que avanzan los años, siendo los años 80 la década con mas películas en este conjunto de datos, seguido por los 70 y los 90.
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
plot(filmAUX$Subject~filmAUX$`Popularity Tier`)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
boxplot(filmAUX$Subject~filmAUX$`Popularity Tier`)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
boxplot(filmAUX$Subject~filmAUX$Popularity)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
plot(filmAUX$Subject~filmAUX$Popularity)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
summary(filmAUX$Subject)
filmAUX$Subject <- as.factor(filmAUX$Subject)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
summary(filmAUX$Subject)
plot(filmAUX$Subject~filmAUX$Popularity)
plot(filmAUX$Subject~filmAUX$`Popularity Tier`)
plot(filmAUX$Subject,filmAUX$`Popularity Tier`)
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
summary(filmAUX$Subject)
plot(filmAUX$Subject,filmAUX$`Popularity Tier`)
summary(filmAUX$Subject)
# Como podemos observar hay demasiados tipos de películas, algunos con tan solo 1 resultado, por lo tanto observaremos solo los que tengan mas de 10 películas en nuestro conjunto de datos.
highSubj <- rownames(filmAUX$Subject)
highSubj
# Como podemos observar hay demasiados tipos de películas, algunos con tan solo 1 resultado, por lo tanto observaremos solo los que tengan mas de 10 películas en nuestro conjunto de datos.
highSubj <- colnames(filmAUX$Subject)
highSubj
# Como podemos observar hay demasiados tipos de películas, algunos con tan solo 1 resultado, por lo tanto observaremos solo los que tengan mas de 10 películas en nuestro conjunto de datos.
highSubj <- names(filmAUX$Subject)
highSubj
summary(filmAUX$Subject)
filmSubj <- filmAUX %>% filter(Subject=="Action", Subject=="Comedy", Subject=="Drama", Subject=="Horror", Subject=="Mystery", Subject=="Science Fiction", Subject=="Western")
View(filmSubj)
filmSubj <- filmAUX %>% filter(Subject=="Action")
View(filmSubj)
filmSubj <- filmAUX %>% filter(Subject==c("Action", "Drama"))
View(filmSubj)
filmSubj <- filmAUX %>% filter(Subject==c("Action", "Drama", "Comedy", "Horror", "Music", "Mystery", "Science Fiction", "War", "Western"))
View(filmSubj)
plot(filmSubj$Subject,filmSubj$`Popularity Tier`)
summary(filmSubj$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
filmSubj <- filmAUX %>% select(Subject==c("Action", "Drama", "Comedy", "Horror", "Music", "Mystery", "Science Fiction", "War", "Western"))
filmSubj <- filmAUX %>% filter(Subject==c("Action", "Drama", "Comedy", "Horror", "Music", "Mystery", "Science Fiction", "War", "Western"))
summary(filmSubj$Subject)
summary(filmAUX$Subject)
filmSubj <- droplevels(filmAUX[!filmAUX$Subject== c("", "Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns")])
filmSubj <- droplevels(filmAUX[!filmAUX$Subject== c("Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns")])
filmSubj <- droplevels(filmAUX[!filmAUX$Subject== c("Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns"),])
filmSubj <- droplevels(filmAUX[!filmAUX$Subject== c("","Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns"),])
summary(filmSubj$Subject)
filmSubj <- filmAUX[!filmAUX$Subject== c("","Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
filmSubj <- filmAUX[!filmAUX$Subject== c("Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
summary(filmSubj$Subject)
filmSubj <- filmAUX[!filmAUX$Subject== c("Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
filmSubj <- filmAUX[!(filmAUX$Subject %in% c("Adventure", "Crime", "Fantasy", "Romance", "Short", "Westerns")),]
summary(filmSubj$Subject)
filmSubj <- subset(filmAUX[!filmAUX$Subject==c("Crime", "Fantasy"),])
summary(filmSubj$Subject)
box(filmAUX$Subject,filmAUX$`Popularity Tier`)
boxplot(filmAUX$Subject,filmAUX$`Popularity Tier`)
summary(filmAUX$Subject)
filmSubj <- filmAUX[!filmAUX$Subject=="Action"]
filmSubj <- filmAUX[!filmAUX$Subject=="Action",]
summary(filmSubj$Subject)
summary(filmAUX$Subject)
filmSubj <- filmAUX[!filmAUX$Subject==c("Adventure", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
summary(filmAUX$Subject)
filmSubj <- filmAUX[!filmAUX$Subject==c("Adventure", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
filmSubj <- filmAUX[filmAUX$Subject!=c("Adventure", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns"),]
summary(filmSubj$Subject)
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Con estos gráficos podemos interpretar mejor los datos de los que disponemos.
# Vemos que los niveles de popularidad de las películas dadas es bastante uniforme.
# La duración de la mayoría de películas oscila entre los 90 y 120 minutos, pero también hay bastantes que tienen un poco mas o un poco menos duración que este rango.
# Finalmente vemos un gran incremento de películas a medida que avanzan los años, siendo los años 80 la década con mas películas en este conjunto de datos, seguido por los 70 y los 90.
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
filmSubj <- filmAUX[filmAUX$Subject %in% c("Action", "Comedy", "Drama"),]
View(filmSubj)
filmSubj <- filmAUX[filmAUX$Subject %in% c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction"),]
View(filmSubj)
View(filmSubj)
plot(filmSubj$`Popularity Tier`, filmSubj$Subject)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`, ylab = "hola")
boxplot(filmSubj$Subject, filmSubj$`Popularity Tier`)
hist(filmSubj$Subject, filmSubj$`Popularity Tier`)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`=="Very Popular")
plot(filmSubj$`Popularity Tier`=="Very Popular", filmSubj$Subject)
plot(filmSubj$Subject)
summary(filmSubj$Subject)
plot(filmSubj$Subject)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`=="Very Popular")
plot(filmSubj$Subject, filmSubj$`Popularity Tier)
plot(filmSubj$Subject, filmSubj$`Popularity Tier)
plot(filmSubj$Subject, filmSubj$`Popularity Tier`)
knitr::opts_chunk$set(echo = TRUE)
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
filmSubj <- filmAUX[!grepl(c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction"), filmAUX$Subject),]
filmAUX$Subject <- as.factor(filmAUX$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
filmSubj <- filmAUX[!grepl(c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction"), filmAUX$Subject),]
filmAUX$Subject <- as.factor(filmAUX$Subject)
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
filmSubj <- filmAUX[!grepl("Action", filmAUX$Subject),]
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
removedSubjects <-c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction")
filmSubj <- filmAUX[!grepl(removedSubjects, filmAUX$Subject),]
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
removedSubjects <-c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction")
filmSubj <- filmAUX[!grep(paste(removedSubjects,collapse="|")),]
filmSubj <- filmAUX[!grep(paste(removedSubjects,collapse="|"), filmAUX$Subject),]
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
filmSubj <- filmAUX %>%
filter_at(vars(Subject), all_vars(!. %in% c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction", "")))
# Cargamos el juego de datos
library(dplyr)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
summary(filmSubj$Subject)
# Cargamos el juego de datos
library(dplyr)
filmDS <- read.csv("film.csv", sep = ";", header = T)
# Este conjunto de datos recopila información de varias películas mostrando variables como la duración, actor/actriz principal, director, popularidad...
# Redacta aquí el código R para el estudio del juego de datos
# Lo primero que podemos apreciar en este conjunto de datos es que la primera fila muestra el tipo de datos de cada columna, lo cual no queremos, así que eliminaremos esta primera columna.
filmDS <- filmDS[-1,]
# Una vez eliminada la primera fila, obtenemos un conjunto de datos con 1659 observaciones y 10 variables.
# Vamos a comprobar si hay valores nulos o perdidos.
# Primero cambiaremos las variables numéricas a tipo numérico
sapply(filmDS, class)
filmDS$Year <- as.numeric(filmDS$Year)
filmDS$Length <- as.numeric(filmDS$Length)
filmDS$Popularity <- as.numeric(filmDS$Popularity)
colSums(is.na(filmDS))
# Hay algunos valores nulos en Length y Popularity.
# Eliminaremos las filas con valor nulo en popularity y length.
filmDS <- filmDS[-which(is.na(filmDS$Popularity)),]
filmDS <- filmDS[-which(is.na(filmDS$Length)),]
colSums(is.na(filmDS))
colSums(filmDS=="")
# Hay valores en blanco en algunas variables, sobretodo en actrices, y director.
# Algunos de estos valores no deberían estar en blanco, como por ejemplo el de director. Ya que toda película(o al menos la gran mayoría), tiene un director.
# En cambio, la variable actress es normal si esta en blanco, ya que puede que muchas películas no tengan actriz/actor principal.
# Por lo tanto eliminaremos las observaciones que tengan la casilla director vacía.
filmDS <- filmDS[-which(filmDS$Director ==""),]
filmDS %>% distinct(Title, Actor, .keep_all= TRUE)
# Al eliminar los duplicados vemos que no ha cambiado el numero de observaciones, por lo tanto no había duplicados.
# Para este conjunto de datos no parece necesario aplicar normalización en ninguna variable.
# Antes de pasar a la discretización, eliminaremos la variable X.image, ya que no interesa para nada.
filmDS <- filmDS %>% select(-X.Image)
# La modificación que si podríamos aplicar es la discretización, en concreto en las variables popularity, length y year.
# Esto puede ser útil para reducir el coste computacional, el tiempo de ejecución y el almacenamiento.
summary(filmDS)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Con estos gráficos podemos interpretar mejor los datos de los que disponemos.
# Vemos que los niveles de popularidad de las películas dadas es bastante uniforme.
# La duración de la mayoría de películas oscila entre los 90 y 120 minutos, pero también hay bastantes que tienen un poco mas o un poco menos duración que este rango.
# Finalmente vemos un gran incremento de películas a medida que avanzan los años, siendo los años 80 la década con mas películas en este conjunto de datos, seguido por los 70 y los 90.
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
summary(filmSubj$Subject)
filmSubj <- filmAUX %>%
filter_at(vars(Subject), all_vars(!. %in% c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction", "")))
#filmAUX$Subject <- as.factor(filmAUX$Subject)
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.character(filmAUX$Subject)
filmSubj <- filmAUX %>%
filter_at(vars(Subject), all_vars(! %in% c("Action", "Comedy", "Drama", "Horror", "Mystery", "Western", "Science Fiction", "")))
#filmAUX$Subject <- as.factor(filmAUX$Subject)
filmSubj$Subject <- as.factor(filmSubj$Subject)
filmAUX$Subject <- as.factor(filmAUX$Subject)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmSubj$Subject)
summary(filmAUX$Subject)
filmSubj <- filmAUX %>%
filter_at(vars(Subject), all_vars(!. %in% c("Adventure", "", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns")))
#filmAUX$Subject <- as.factor(filmAUX$Subject)
filmSubj$Subject <- as.factor(filmSubj$Subject)
summary(filmSubj$Subject)
Rmsubject<- #removedSubjects <-c("Adventure", "", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns")
filmSubj <- filmAUX %>% filmAUX[!grep(c("Adventure", "", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns"), Subject),]
Rmsubject<- #removedSubjects <-c("Adventure", "", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns")
filmSubj <- filmAUX %>% filmAUX[!grep(c("Adventure", "", "Crime", "Fantasy", "Music", "Romance", "Short", "Westerns"), filmAUX$Subject),]
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
library(ggplot2)
qplot(filmAUX$Subject, filmAUX$`Popularity Tier`)
qplot(filmAUX$Subject, filmAUX$Popularity)
geom_violin(filmAUX$Subject, filmAUX$Popularity)
hist(filmAUX$Subject, filmAUX$Popularity)
plot(filmAUX$Subject, filmAUX$Popularity)
plot(filmAUX$Subject, filmAUX$`Popularity Tier`)
plot(filmAUX$Subject, filmAUX$Popularity)
geom_boxplot(filmAUX$Subject, filmAUX$Popularity)
geom_boxplot()
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot()
p
+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
summary(filmAUX$Subject)
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="purple") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="lightpurple") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="lavender") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="lavende1r") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="lavender1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="magenta") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="mediumpurple1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
p <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
p
popSubj <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
popSubj
plot(filmAUX$Popularity, filmAUX$Awards)
plot(filmAUX$Awards, filmAUX$Popularity)
filmAUX$Awards <- as.logical(filmAUX$Awards)
plot(filmAUX$Awards, filmAUX$Popularity)
plot(filmAUX$Popularity, filmAUX$Awards)
plot(filmAUX$`Popularity Tier`, filmAUX$Awards)
plot(filmAUX$Awards)
summary(filmAUX$Awards)
filmAUX <- filmDS
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
summary(filmAUX$Subject)
library(ggplot2)
popSubj <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
popSubj
# Finalmente queremos comprobar si la popularidad de estas películas esta relacionada con los premios que tiene.
filmAUX$Awards<-ifelse(filmAUX$Awards=="Si",1,0)
filmAUX$Awards <- as.logical(filmAUX$Awards)
summary(filmAUX$Awards)
# Finalmente queremos comprobar si la popularidad de estas películas esta relacionada con los premios que tiene.
filmAUX$Awards<-ifelse(filmAUX$Awards=="Yes",1,0)
filmAUX$Awards <- as.logical(filmAUX$Awards)
summary(filmAUX$Awards)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
library(ggplot2)
popSubj <- ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
popSubj
# Finalmente queremos comprobar si la popularidad de estas películas esta relacionada con los premios que tiene.
filmAUX$Awards<-ifelse(filmAUX$Awards=="Yes",1,0)
filmAUX$Awards <- as.logical(filmAUX$Awards)
summary(filmAUX$Awards)
plot(filmAUX$Awards)
plot(filmAUX$Awards, filmAUX$Popularity)
plot(filmAUX$Awards, filmAUX$`Popularity Tier`)
plot(filmAUX$Awards~filmAUX$`Popularity Tier`)
plot(filmAUX$Awards, filmAUX$`Popularity Tier`)
boxplot(filmAUX$Awards, filmAUX$`Popularity Tier`)
boxplot(filmAUX$Awards~filmAUX$`Popularity Tier`)
boxplot(filmAUX$Awards~filmAUX$`Popularity Tier`=="Very Popular")
boxplot(filmAUX$Awards,filmAUX$`Popularity Tier`=="Very Popular")
plot(filmAUX$Awards,filmAUX$`Popularity Tier`=="Very Popular")
plot(filmAUX$Awards~filmAUX$`Popularity Tier`=="Very Popular")
barplot(filmAUX$Awards~filmAUX$`Popularity Tier`=="Very Popular")
barplot(filmAUX$Awards,filmAUX$`Popularity Tier`=="Very Popular")
barplot(filmAUX$Awards,filmAUX$`Popularity Tier`)
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`)) + geom_col(position = "dodge")
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_col(position = "dodge")
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_bar(position = "dodge")
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_bar()
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_hist()
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_boxplot()
ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_boxplot()
ggplot(filmAUX, aes(x = Awards, y = `Popularity Tier`, fill = `Popularity Tier`)) + geom_col()
knitr::opts_chunk$set(echo = TRUE)
summary(filmAUX$Awards)
# Cargamos el juego de datos
library(dplyr)
filmDS <- read.csv("film.csv", sep = ";", header = T)
# Este conjunto de datos recopila información de varias películas mostrando variables como la duración, actor/actriz principal, director, popularidad...
# Redacta aquí el código R para el estudio del juego de datos
# Lo primero que podemos apreciar en este conjunto de datos es que la primera fila muestra el tipo de datos de cada columna, lo cual no queremos, así que eliminaremos esta primera columna.
filmDS <- filmDS[-1,]
# Una vez eliminada la primera fila, obtenemos un conjunto de datos con 1659 observaciones y 10 variables.
# Otro problema que observamos, es que los nombres de los actores y actrices usa lenguaje hexadecimal para las letras con acentos, lo cual se podría cambiar, pero puede ser un proceso complejo, y como en nuestro estudio no nos interesan estas variables, lo dejaremos tal y como esta.
# Vamos a comprobar si hay valores nulos o perdidos.
# Primero cambiaremos las variables numéricas a tipo numérico
sapply(filmDS, class)
filmDS$Year <- as.numeric(filmDS$Year)
filmDS$Length <- as.numeric(filmDS$Length)
filmDS$Popularity <- as.numeric(filmDS$Popularity)
colSums(is.na(filmDS))
# Hay algunos valores nulos en Length y Popularity.
# Eliminaremos las filas con valor nulo en popularity y length.
filmDS <- filmDS[-which(is.na(filmDS$Popularity)),]
filmDS <- filmDS[-which(is.na(filmDS$Length)),]
colSums(is.na(filmDS))
colSums(filmDS=="")
# Hay valores en blanco en algunas variables, sobretodo en actrices, y director.
# Algunos de estos valores no deberían estar en blanco, como por ejemplo el de director. Ya que toda película(o al menos la gran mayoría), tiene un director.
# En cambio, la variable actress es normal si esta en blanco, ya que puede que muchas películas no tengan actriz/actor principal.
# Por lo tanto eliminaremos las observaciones que tengan la casilla director vacía.
filmDS <- filmDS[-which(filmDS$Director ==""),]
filmDS %>% distinct(Title, Actor, .keep_all= TRUE)
# Al eliminar los duplicados vemos que no ha cambiado el numero de observaciones, por lo tanto no había duplicados.
# Para este conjunto de datos no parece necesario aplicar normalización en ninguna variable.
# Antes de pasar a la discretización, eliminaremos la variable X.image, ya que no interesa para nada.
filmDS <- filmDS %>% select(-X.Image)
# La modificación que si podríamos aplicar es la discretización, en concreto en las variables popularity, length y year.
# Esto puede ser útil para reducir el coste computacional, el tiempo de ejecución y el almacenamiento.
summary(filmDS)
filmAUX <- filmDS
filmAUX["Popularity Tier"] <- cut(filmAUX$Popularity, breaks = c(0, 30, 60, 90), labels = c("Unpopular", "Medium Popular", "Very Popular"))
filmAUX["Length Tier"] <- cut(filmAUX$Length, breaks = c(0, 30, 60, 90, 120, 500), labels = c("Very Short", "Short", "Med short", "Med long", "Very Long"))
filmAUX["Age"] <- cut(filmAUX$Year, breaks = c(1920, 1929, 1939, 1949, 1959, 1969, 1979, 1989, 1999), labels = c("20's", "30's", "40's", "50's", "60's", "70's", "80's", "90's"))
plot(filmAUX$`Popularity Tier`, main = "Distribución de popularidad en las películas")
plot(filmAUX$`Length Tier`, main = "Distribución de longitud en las películas")
plot(filmAUX$Age, main = "Distribución de epocas en las películas")
# Con estos gráficos podemos interpretar mejor los datos de los que disponemos.
# Vemos que los niveles de popularidad de las películas dadas es bastante uniforme.
# La duración de la mayoría de películas oscila entre los 90 y 120 minutos, pero también hay bastantes que tienen un poco mas o un poco menos duración que este rango.
# Finalmente vemos un gran incremento de películas a medida que avanzan los años, siendo los años 80 la década con mas películas en este conjunto de datos, seguido por los 70 y los 90.
# Por otro lado queremos saber que relación tiene el tipo de película con la popularidad.
# Para ello pasaremos la variable "Subject" de tipo char a tipo factor.
filmAUX$Subject <- as.factor(filmAUX$Subject)
summary(filmAUX$Subject)
library(ggplot2)
ggplot(filmAUX, aes(x = Subject, y = Popularity))+
geom_boxplot(fill="slateblue1") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Con este gráfico podemos ver la popularidad de los distintos géneros de películas.
# Vemos que de los géneros principales o con mas ejemplos, no hay ninguno que sobresalga por encima del resto, Adventure tiene una media bastante alta pero se trata de solo 4 películas respecto a por ejemplo las 579 de Drama.
# Tampoco se observa ningún genero con resultados muy negativos respecto a los demás.
# Finalmente queremos comprobar si la popularidad de estas películas esta relacionada con los premios que tiene.
filmAUX$Awards<-ifelse(filmAUX$Awards=="Yes",1,0)
filmAUX$Awards <- as.logical(filmAUX$Awards)
summary(filmAUX$Awards)
barplot(filmAUX$Awards,filmAUX$`Popularity Tier`)
filmDS <- read.csv("film.csv", sep = ";", header = T)
# Redacta aquí el código R para el estudio del juego de datos
# Lo primero que podemos apreciar en este conjunto de datos es que la primera fila muestra el tipo de datos de cada columna, lo cual no queremos, así que eliminaremos esta primera columna.
filmDS <- filmDS[-1,]
# Primero cambiaremos las variables numéricas a tipo numérico
sapply(filmDS, class)
filmDS$Year <- as.numeric(filmDS$Year)
filmDS$Length <- as.numeric(filmDS$Length)
filmDS$Popularity <- as.numeric(filmDS$Popularity)
# Comprobamos si hay NAs
colSums(is.na(filmDS))
# Hay algunos valores nulos en Length y Popularity.
# Eliminaremos las filas con valor nulo en Length y Popularity.
filmDS <- filmDS[-which(is.na(filmDS$Popularity)),]
filmDS <- filmDS[-which(is.na(filmDS$Length)),]
# Comprobamos si se han eliminado correctamente.
colSums(is.na(filmDS))
# Hacemos el mismo proceso con valores inexistentes.
colSums(filmDS=="")
filmDS <- filmDS[-which(filmDS$Director ==""),]
filmDS <- filmDS %>% distinct(Title, Actor, .keep_all= TRUE)
View(DataNetflixRevenue)
DataNetflixRevenue <- read.csv('DataNetflixRevenue2020_V2.csv')
setwd('C:/Users/ferra/Documents/UOC/Diseño y uso de bases de datos analíticas/PRA1/Fuentes/')
DataNetflixRevenue <- read.csv('DataNetflixRevenue2020_V2.csv')
View(DataNetflixRevenue)
summary(DataNetflixRevenue)
sapply(DataNetflixRevenue, class)
DataNetflixSubs <- read.csv('DataNetflixSubscriber2020_V2.csv')
View(DataNetflixSubs)
sapply(DataNetflixSubs, class)
getwd()
setwd("C:/Users/ferra/Documents/UOC/Tipología y ciclo de vida de los datos/PR1-web-scraping-repo/")
gecko <- read.csv('CoinGecko.csv', sep = ',')
gecko <- read.csv('CoinGecko.csv', sep = ',')
View(gecko)
